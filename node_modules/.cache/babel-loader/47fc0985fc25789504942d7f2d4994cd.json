{"ast":null,"code":"var _jsxFileName = \"/Users/sundarakrishnan/Desktop/MusicApplication/music-application/src/components/Browse.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AlbumContext, SongsContext } from '../App';\nimport AddIcon from '@material-ui/icons/Add';\nimport './Browser.css';\nimport CurrentPlaying from './CurrentPlaying';\nimport { CurrentSongDetails } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nlet faker = require('faker');\n\nexport const CurrentSongTitle = /*#__PURE__*/React.createContext();\nexport const CurrentSongTime = /*#__PURE__*/React.createContext();\n\nconst randomTimeGenerator = () => {\n  const randomNumber = Math.random() * 10;\n  return randomNumber.toFixed(2);\n};\n\nfunction Browse() {\n  _s();\n\n  const [CurrentTitle, CurrentTime, setCurrentTime, setCurrentTitle] = useContext(CurrentSongDetails);\n  const albums = useContext(AlbumContext);\n  const songs = useContext(SongsContext);\n  var randomName = faker.name.findName();\n  var TitleTrack = '';\n  var Duration = '';\n  let htmlSongs;\n  const searchbar = document.getElementById('searchbar');\n  const songsList = document.getElementsByClassName('SongsList')[0];\n  const data = songs && songs.map(song => /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"EachSongContainer\",\n    onClick: eventSongHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"ImgContainer\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: song.thumbnailUrl,\n        className: \"Img-thumbnail\",\n        alt: \"thumbnail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 39\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"TrackTitle\",\n      children: [song.title.charAt(0).toUpperCase() + song.title.slice(1), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"tooltiptext\",\n        children: song.title.charAt(0).toUpperCase() + song.title.slice(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 96\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"DurationofSong\",\n      children: randomTimeGenerator()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"Singer\",\n      children: faker.name.findName()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"AlbumName\",\n      children: albums && albums.map(album => album.id === song.albumId && album.title)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"AddtoFav\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this));\n  songsList.innerHTML = data && data;\n\n  const displayFilteredSong = filteredSongs => {\n    return htmlSongs = filteredSongs && filteredSongs.map(song => {\n      return ` <li className='EachSongContainer' onClick={eventSongHandler}>\n                <span className='ImgContainer'> <img src=${song.thumbnailUrl} className='Img-thumbnail' alt='thumbnail'/> </span>\n                <p className='TrackTitle' >${song.title.charAt(0).toUpperCase() + song.title.slice(1)} <span class=\"tooltiptext\">${song.title.charAt(0).toUpperCase() + song.title.slice(1)}</span></p>\n               <p className='DurationofSong'>${randomTimeGenerator()}</p>  \n               <p className='Singer'>${faker.name.findName()}</p>   \n               <p className='AlbumName'>${albums && albums.map(album => album.id === song.albumId && album.title)}</p>    \n            </li> `;\n    }).join('');\n  };\n\n  useEffect(() => {\n    if (searchbar) {\n      searchbar.addEventListener('keyup', e => {\n        const searchString = e.target.value.toLowerCase();\n        const filteredSongs = songs.filter(song => {\n          return song.title.toLowerCase().includes(searchString);\n        });\n        const finalResult = displayFilteredSong(filteredSongs);\n        let htmlObject = document.createElement('div');\n        htmlObject.innerHTML = finalResult;\n        console.log(htmlObject);\n        console.log('mmmnan');\n        songsList.appendChild(htmlObject);\n        console.log('mmmnan');\n        console.log('mmmnan');\n      });\n    }\n  }, [htmlSongs]);\n\n  const eventSongHandler = e => {\n    const domelements = e.target;\n    console.log(domelements);\n    TitleTrack = domelements.querySelectorAll(\".TrackTitle\")[0].innerHTML;\n    Duration = domelements.querySelectorAll(\".DurationofSong\")[0].innerHTML;\n    console.log(Duration);\n    setCurrentTitle(TitleTrack);\n    setCurrentTime(Duration);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"searchbar\",\n        id: \"searchbar\",\n        placeholder: \"Search for a song\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"SongsWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"TitleHeading\",\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"Songimg\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"TrackTitleHeading\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"DurationHeading\",\n          children: \"Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"SingerHeading\",\n          children: \"Artist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"AlbumHeading\",\n          children: \"Album\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"AddtoPlaylist\",\n          children: \"Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"SongsList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Browse, \"1DAjzsDaGFBPlwaOUjKmuOmXxF0=\");\n\n_c = Browse;\nexport default Browse;\n\nvar _c;\n\n$RefreshReg$(_c, \"Browse\");","map":{"version":3,"sources":["/Users/sundarakrishnan/Desktop/MusicApplication/music-application/src/components/Browse.js"],"names":["React","useContext","useEffect","useState","AlbumContext","SongsContext","AddIcon","CurrentPlaying","CurrentSongDetails","faker","require","CurrentSongTitle","createContext","CurrentSongTime","randomTimeGenerator","randomNumber","Math","random","toFixed","Browse","CurrentTitle","CurrentTime","setCurrentTime","setCurrentTitle","albums","songs","randomName","name","findName","TitleTrack","Duration","htmlSongs","searchbar","document","getElementById","songsList","getElementsByClassName","data","map","song","eventSongHandler","thumbnailUrl","title","charAt","toUpperCase","slice","album","id","albumId","innerHTML","displayFilteredSong","filteredSongs","join","addEventListener","e","searchString","target","value","toLowerCase","filter","includes","finalResult","htmlObject","createElement","console","log","appendChild","domelements","querySelectorAll"],"mappings":"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","sourcesContent":["import React, {useContext,useEffect,useState} from 'react'\nimport {AlbumContext,SongsContext} from '../App'\nimport AddIcon from '@material-ui/icons/Add';\nimport './Browser.css'\nimport CurrentPlaying from './CurrentPlaying';\nimport {CurrentSongDetails} from '../App'\nlet faker = require('faker');\n\n\nexport const CurrentSongTitle=React.createContext()\nexport const CurrentSongTime=React.createContext()\n\nconst randomTimeGenerator=()=>{\n    const randomNumber=Math.random()*10;\n    return randomNumber.toFixed(2)\n}\n\n\nfunction Browse() {\n    const [CurrentTitle, CurrentTime, setCurrentTime,setCurrentTitle] = useContext(CurrentSongDetails);\n\n    const albums=useContext(AlbumContext);\n    const songs=useContext(SongsContext);\n\n   \n    var randomName = faker.name.findName(); \n    var TitleTrack='';\n    var Duration='';\n    let htmlSongs;\n    const searchbar=document.getElementById('searchbar');\n    const songsList=document.getElementsByClassName('SongsList')[0];\n\n  const data=songs && songs.map(song=>(\n            \n    <ul className='EachSongContainer' onClick={eventSongHandler}>\n        <td className='ImgContainer'> <img src={song.thumbnailUrl} className='Img-thumbnail' alt='thumbnail'/> </td>\n        <td className='TrackTitle' >{song.title.charAt(0).toUpperCase() + song.title.slice(1)} <span class=\"tooltiptext\">{song.title.charAt(0).toUpperCase() + song.title.slice(1)}</span></td>\n       <td className='DurationofSong'>{randomTimeGenerator()}</td>  \n       <td className='Singer'>{faker.name.findName()}</td>   \n       <td className='AlbumName'>{ albums && albums.map(album =>(\n           (album.id===song.albumId) && album.title \n      )) }</td>   \n      <td className='AddtoFav'> <AddIcon /></td>         \n    </ul>    \n))\n   \nsongsList.innerHTML = data&&data;\n  \n    const  displayFilteredSong=(filteredSongs)=>{\n        return htmlSongs= filteredSongs && filteredSongs.map(song=>{\n                return ` <li className='EachSongContainer' onClick={eventSongHandler}>\n                <span className='ImgContainer'> <img src=${song.thumbnailUrl} className='Img-thumbnail' alt='thumbnail'/> </span>\n                <p className='TrackTitle' >${song.title.charAt(0).toUpperCase() + song.title.slice(1)} <span class=\"tooltiptext\">${song.title.charAt(0).toUpperCase() + song.title.slice(1)}</span></p>\n               <p className='DurationofSong'>${randomTimeGenerator()}</p>  \n               <p className='Singer'>${faker.name.findName()}</p>   \n               <p className='AlbumName'>${ albums && albums.map(album =>(\n                   (album.id===song.albumId) && album.title \n              )) }</p>    \n            </li> ` ;\n               }).join('');\n    }\n\n\n\n    useEffect(() => {\n        if(searchbar){\n            searchbar.addEventListener('keyup', (e) => { \n                const searchString=e.target.value.toLowerCase();\n                const filteredSongs=songs.filter((song)=>{\n                        return song.title.toLowerCase().includes(searchString)\n                })\n   \n                const finalResult=displayFilteredSong(filteredSongs);\n                 let htmlObject = document.createElement('div');\n                 htmlObject.innerHTML = finalResult;\n                 console.log(htmlObject)\n                        \n             \n                 \n                 console.log('mmmnan') \n                 songsList.appendChild(htmlObject);\n             \n                 console.log('mmmnan') \n                 console.log('mmmnan')\n            \n            });\n        }\n      \n     \n    }, [htmlSongs])\n\n\n\n\n\n\n    const eventSongHandler=(e) =>{\n        const domelements = e.target\n        console.log(domelements);\n         TitleTrack= domelements.querySelectorAll(\".TrackTitle\")[0].innerHTML;\n         Duration= domelements.querySelectorAll(\".DurationofSong\")[0].innerHTML;   \n         console.log(Duration) \n        setCurrentTitle(TitleTrack);\n        setCurrentTime(Duration);\n      }\n\n\n\n\n\n\n\n\n\n    \n  \n    return (\n        <>\n        <div className='SearchWrapper'>\n            <input type='text' name='searchbar' id='searchbar' placeholder='Search for a song'/>\n        </div>\n\n        <ul className='SongsWrapper'>\n\n        <li className='TitleHeading'>\n            <th className='Songimg'>Image</th>\n            <th className='TrackTitleHeading'>Title</th>\n            <th className='DurationHeading'>Time</th>\n            <th className='SingerHeading'>Artist</th>\n            <th className='AlbumHeading'>Album</th>\n            <th className='AddtoPlaylist'>Playlist</th>\n        </li>\n        \n            <ul className='SongsList'>\n             \n\n\n            </ul>\n\n\n        </ul>\n        </>\n    )\n}\n\n\nexport default Browse\n"]},"metadata":{},"sourceType":"module"}