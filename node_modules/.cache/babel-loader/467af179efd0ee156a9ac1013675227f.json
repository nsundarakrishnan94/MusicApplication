{"ast":null,"code":"var _jsxFileName = \"/Users/sundarakrishnan/Desktop/MusicApplication/music-application/src/components/SpecificPlaylist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AlbumContext, SongsContext } from '../App';\nimport AddIcon from '@material-ui/icons/Add';\nimport './AllSongs.css';\nimport CurrentPlaying from './CurrentPlaying';\nimport { CurrentSongDetails } from '../App';\nimport PlaylistModal from './PlaylistModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nlet faker = require('faker');\n\nexport const CurrentSongTitle = /*#__PURE__*/React.createContext();\nexport const CurrentSongTime = /*#__PURE__*/React.createContext();\n\nconst randomTimeGenerator = () => {\n  const randomNumber = Math.random() * 10;\n  return randomNumber.toFixed(2);\n};\n\nfunction SpecificPlaylist() {\n  _s();\n\n  const [Playlists, setPlaylists] = useState([]);\n  const [isModalOpen, setisModalOpen] = useState(false);\n\n  const modalOpen = () => {\n    console.log('hiiii');\n    setisModalOpen(true);\n  };\n\n  const modalClose = () => {\n    setisModalOpen(false);\n  };\n\n  const [CurrentTitle, CurrentTime, CurrentImg, setCurrentTime, setCurrentTitle, setCuttentImg] = useContext(CurrentSongDetails);\n  const albums = useContext(AlbumContext);\n  const songs = useContext(SongsContext);\n  const [searchSong, setSearchSong] = useState(\"\");\n  const [initialData, setInitialData] = useState(songs);\n  const [data, setData] = useState(songs);\n\n  const handleChange = value => {\n    setSearchSong(value);\n    filterData(value);\n  };\n\n  const filterData = value => {\n    const lowercasedValue = value.toLowerCase().trim();\n    if (lowercasedValue === \"\") setData(songs);else {\n      const filteredData = songs.filter(song => {\n        return song.title.toLowerCase().includes(lowercasedValue);\n      });\n      setData(filteredData);\n      console.log(data);\n      console.log(filteredData);\n    }\n  };\n\n  var randomName = faker.name.findName();\n  let TitleTrack = '';\n  let Duration = '';\n  let Img;\n  let htmlSongs;\n  const searchbar = document.getElementById('searchbar');\n  const songsList = document.getElementsByClassName('SongsList')[0];\n\n  const eventSongHandler = e => {\n    const domelements = e.target;\n    console.log(domelements);\n    TitleTrack = domelements.querySelectorAll(\".TrackTitle\")[0].innerHTML;\n    Duration = domelements.querySelectorAll(\".DurationofSong\")[0].innerHTML;\n    Img = domelements.querySelectorAll(\".Img-thumbnail\").src;\n    console.log(Duration);\n    setCurrentTitle(TitleTrack);\n    setCurrentTime(Duration);\n    setCuttentImg(Img);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"ActiveTitle\",\n      children: \"Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"CreatePlaylistbtn\",\n        onClick: modalOpen,\n        children: \" Add Songs to Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"SongsWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"TitleHeading\",\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"Songimg\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"TrackTitleHeading\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"DurationHeading\",\n          children: \"Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"SingerHeading\",\n          children: \"Artist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"AlbumHeading\",\n          children: \"Album\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"AddtoPlaylist\",\n          children: \"Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PlaylistModal, {\n      open: isModalOpen,\n      handleClose: modalClose,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"SongsWrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"TitleHeading\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"Songimg\",\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"TrackTitleHeading\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"DurationHeading\",\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"SingerHeading\",\n            children: \"Artist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"AlbumHeading\",\n            children: \"Album\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"AddtoPlaylist\",\n            children: \"Playlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SpecificPlaylist, \"GCkJhoLCbCY6vGLjizwpIRtBguU=\");\n\n_c = SpecificPlaylist;\nexport default SpecificPlaylist;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpecificPlaylist\");","map":{"version":3,"sources":["/Users/sundarakrishnan/Desktop/MusicApplication/music-application/src/components/SpecificPlaylist.js"],"names":["React","useContext","useEffect","useState","AlbumContext","SongsContext","AddIcon","CurrentPlaying","CurrentSongDetails","PlaylistModal","faker","require","CurrentSongTitle","createContext","CurrentSongTime","randomTimeGenerator","randomNumber","Math","random","toFixed","SpecificPlaylist","Playlists","setPlaylists","isModalOpen","setisModalOpen","modalOpen","console","log","modalClose","CurrentTitle","CurrentTime","CurrentImg","setCurrentTime","setCurrentTitle","setCuttentImg","albums","songs","searchSong","setSearchSong","initialData","setInitialData","data","setData","handleChange","value","filterData","lowercasedValue","toLowerCase","trim","filteredData","filter","song","title","includes","randomName","name","findName","TitleTrack","Duration","Img","htmlSongs","searchbar","document","getElementById","songsList","getElementsByClassName","eventSongHandler","e","domelements","target","querySelectorAll","innerHTML","src"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA0BC,SAA1B,EAAoCC,QAApC,QAAmD,OAAnD;AACA,SAAQC,YAAR,EAAqBC,YAArB,QAAwC,QAAxC;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAO,gBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAQC,kBAAR,QAAiC,QAAjC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;;AACA,IAAIC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AAGA,OAAO,MAAMC,gBAAgB,gBAACZ,KAAK,CAACa,aAAN,EAAvB;AACP,OAAO,MAAMC,eAAe,gBAACd,KAAK,CAACa,aAAN,EAAtB;;AAEP,MAAME,mBAAmB,GAAC,MAAI;AAC1B,QAAMC,YAAY,GAACC,IAAI,CAACC,MAAL,KAAc,EAAjC;AACA,SAAOF,YAAY,CAACG,OAAb,CAAqB,CAArB,CAAP;AACH,CAHD;;AAKA,SAASC,gBAAT,GAA4B;AAAA;;AAIxB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACoB,WAAD,EAAaC,cAAb,IAA6BrB,QAAQ,CAAC,KAAD,CAA3C;;AAOE,QAAMsB,SAAS,GAAG,MAAM;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAH,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAHD;;AAMA,QAAMI,UAAU,GAAC,MAAM;AACrBJ,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAFD;;AAiBF,QAAM,CAACK,YAAD,EAAeC,WAAf,EAA2BC,UAA3B,EAAuCC,cAAvC,EAAsDC,eAAtD,EAAsEC,aAAtE,IAAuFjC,UAAU,CAACO,kBAAD,CAAvG;AAEA,QAAM2B,MAAM,GAAClC,UAAU,CAACG,YAAD,CAAvB;AACA,QAAMgC,KAAK,GAACnC,UAAU,CAACI,YAAD,CAAtB;AAIH,QAAM,CAACgC,UAAD,EAAaC,aAAb,IAA8BnC,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACoC,WAAD,EAAcC,cAAd,IAAgCrC,QAAQ,CAACiC,KAAD,CAA9C;AACC,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBvC,QAAQ,CAACiC,KAAD,CAAhC;;AAKA,QAAMO,YAAY,GAAGC,KAAK,IAAI;AAC5BN,IAAAA,aAAa,CAACM,KAAD,CAAb;AACAC,IAAAA,UAAU,CAACD,KAAD,CAAV;AACD,GAHD;;AAUA,QAAMC,UAAU,GAAID,KAAD,IAAW;AAC5B,UAAME,eAAe,GAAGF,KAAK,CAACG,WAAN,GAAoBC,IAApB,EAAxB;AACA,QAAIF,eAAe,KAAK,EAAxB,EAA4BJ,OAAO,CAACN,KAAD,CAAP,CAA5B,KACK;AACH,YAAMa,YAAY,GAAGb,KAAK,CAACc,MAAN,CAAaC,IAAI,IAAI;AACxC,eAAQA,IAAI,CAACC,KAAL,CAAWL,WAAX,GAAyBM,QAAzB,CAAkCP,eAAlC,CAAR;AAED,OAHoB,CAArB;AAIAJ,MAAAA,OAAO,CAACO,YAAD,CAAP;AACAvB,MAAAA,OAAO,CAACC,GAAR,CAAYc,IAAZ;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAYsB,YAAZ;AACD;AACF,GAZD;;AAmBE,MAAIK,UAAU,GAAG5C,KAAK,CAAC6C,IAAN,CAAWC,QAAX,EAAjB;AACA,MAAIC,UAAU,GAAC,EAAf;AACA,MAAIC,QAAQ,GAAC,EAAb;AACA,MAAIC,GAAJ;AACA,MAAIC,SAAJ;AACA,QAAMC,SAAS,GAACC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAhB;AACA,QAAMC,SAAS,GAACF,QAAQ,CAACG,sBAAT,CAAgC,WAAhC,EAA6C,CAA7C,CAAhB;;AAKA,QAAMC,gBAAgB,GAAEC,CAAD,IAAM;AACzB,UAAMC,WAAW,GAAGD,CAAC,CAACE,MAAtB;AACA3C,IAAAA,OAAO,CAACC,GAAR,CAAYyC,WAAZ;AACCX,IAAAA,UAAU,GAAEW,WAAW,CAACE,gBAAZ,CAA6B,aAA7B,EAA4C,CAA5C,EAA+CC,SAA3D;AACAb,IAAAA,QAAQ,GAAEU,WAAW,CAACE,gBAAZ,CAA6B,iBAA7B,EAAgD,CAAhD,EAAmDC,SAA7D;AACAZ,IAAAA,GAAG,GAAGS,WAAW,CAACE,gBAAZ,CAA6B,gBAA7B,EAA+CE,GAArD;AACA9C,IAAAA,OAAO,CAACC,GAAR,CAAY+B,QAAZ;AACDzB,IAAAA,eAAe,CAACwB,UAAD,CAAf;AACAzB,IAAAA,cAAc,CAAC0B,QAAD,CAAd;AACAxB,IAAAA,aAAa,CAACyB,GAAD,CAAb;AACD,GAVH;;AAeA,sBACI;AAAA,4BACA;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACA;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,OAAO,EAAElC,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFA,eAMA;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA,6BAEI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YANA,eAkBA,QAAC,aAAD;AACA,MAAA,IAAI,EAAEF,WADN;AAEA,MAAA,WAAW,EAAEK,UAFb;AAAA,6BAKA;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,+BAEA;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAI,YAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAI,YAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAI,YAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAI,YAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA,YAlBA;AAAA,kBADJ;AAoEH;;GA5KQR,gB;;KAAAA,gB;AA+KT,eAAeA,gBAAf","sourcesContent":["import React, {useContext,useEffect,useState} from 'react'\nimport {AlbumContext,SongsContext} from '../App'\nimport AddIcon from '@material-ui/icons/Add';\nimport './AllSongs.css'\nimport CurrentPlaying from './CurrentPlaying';\nimport {CurrentSongDetails} from '../App'\nimport PlaylistModal from './PlaylistModal'\nlet faker = require('faker');\n\n\nexport const CurrentSongTitle=React.createContext()\nexport const CurrentSongTime=React.createContext()\n\nconst randomTimeGenerator=()=>{\n    const randomNumber=Math.random()*10;\n    return randomNumber.toFixed(2)\n}\n\nfunction SpecificPlaylist() {\n\n\n\n    const [Playlists, setPlaylists] = useState([])\n    const [isModalOpen,setisModalOpen]=useState(false);\n    \n\n    \n\n   \n  \n      const modalOpen = () => {\n        console.log('hiiii')\n        setisModalOpen(true) \n      }\n    \n   \n      const modalClose=() => {\n        setisModalOpen(false);\n      }\n\n   \n\n      \n \n\n\n\n\n\n\n\n\n\n    const [CurrentTitle, CurrentTime,CurrentImg, setCurrentTime,setCurrentTitle,setCuttentImg] = useContext(CurrentSongDetails);\n\n    const albums=useContext(AlbumContext);\n    const songs=useContext(SongsContext);\n\n\n\n const [searchSong, setSearchSong] = useState(\"\");\n const [initialData, setInitialData] = useState(songs);\n  const [data, setData] = useState(songs);\n\n  \n\n\n  const handleChange = value => {\n    setSearchSong(value);\n    filterData(value);\n  };\n  \n\n  \n\n  \n  \n  const filterData = (value) => {\n    const lowercasedValue = value.toLowerCase().trim();\n    if (lowercasedValue === \"\") setData(songs);\n    else {\n      const filteredData = songs.filter(song => {\n        return  song.title.toLowerCase().includes(lowercasedValue)\n        \n      });\n      setData(filteredData);\n      console.log(data);\n      console.log(filteredData);\n    }\n  }\n\n\n\n\n\n   \n    var randomName = faker.name.findName(); \n    let TitleTrack='';\n    let Duration='';\n    let Img;\n    let htmlSongs;\n    const searchbar=document.getElementById('searchbar');\n    const songsList=document.getElementsByClassName('SongsList')[0];\n\n\n\n\n    const eventSongHandler=(e) =>{\n        const domelements = e.target\n        console.log(domelements);\n         TitleTrack= domelements.querySelectorAll(\".TrackTitle\")[0].innerHTML;\n         Duration= domelements.querySelectorAll(\".DurationofSong\")[0].innerHTML;  \n         Img=  domelements.querySelectorAll(\".Img-thumbnail\").src;  \n         console.log(Duration) \n        setCurrentTitle(TitleTrack);\n        setCurrentTime(Duration);\n        setCuttentImg(Img);\n      }\n\n\n\n  \n    return (\n        <>\n        <p className='ActiveTitle'>Playlist</p>\n        <div className='SearchWrapper'>\n        <button className='CreatePlaylistbtn' onClick={modalOpen}> Add Songs to Playlist</button>\n        </div>\n\n        <ul className='SongsWrapper'>\n\n            <li className='TitleHeading'>\n                <th className='Songimg'>Image</th>\n                <th className='TrackTitleHeading'>Title</th>\n                <th className='DurationHeading'>Time</th>\n                <th className='SingerHeading'>Artist</th>\n                <th className='AlbumHeading'>Album</th>\n                <th className='AddtoPlaylist'>Playlist</th>\n            </li>\n\n        </ul>\n        <PlaylistModal\n        open={isModalOpen}\n        handleClose={modalClose}>\n\n\n        <ul className='SongsWrapper'>\n\n        <li className='TitleHeading'>\n            <th className='Songimg'>Image</th>\n            <th className='TrackTitleHeading'>Title</th>\n            <th className='DurationHeading'>Time</th>\n            <th className='SingerHeading'>Artist</th>\n            <th className='AlbumHeading'>Album</th>\n            <th className='AddtoPlaylist'>Playlist</th>\n        </li>\n        \n           {/*  <ul className='SongsList'>\n               {\n                data.map(song=>{\n                  return   <li className='EachSongContainer' onClick={eventSongHandler}>\n                    <span className='ImgContainer'> <img src={song.thumbnailUrl} className='Img-thumbnail' alt='thumbnail'/> </span>\n                    <p className='TrackTitle' >{song.title.charAt(0).toUpperCase() + song.title.slice(1)} <span class=\"tooltiptext\">{song.title.charAt(0).toUpperCase() + song.title.slice(1)}</span></p>\n                   <p className='DurationofSong'>{randomTimeGenerator()}</p>  \n                   <p className='Singer'>{faker.name.findName()}</p>   \n                   <p className='AlbumName'>{ albums && albums.map(album =>(\n                       (album.id===song.albumId) && album.title \n                  )) }</p>   \n                  <AddIcon className='AddtoFav'/> \n                </li>\n                   \n                })\n               }\n            </ul>*/}\n\n        </ul>\n       \n        </PlaylistModal>\n\n\n\n\n\n\n\n\n\n        \n        </>\n    )\n}\n\n\nexport default SpecificPlaylist\n"]},"metadata":{},"sourceType":"module"}