{"ast":null,"code":"var _jsxFileName = \"/Users/sundarakrishnan/Desktop/MusicApplication/music-application/src/components/AllSongs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AlbumContext, SongsContext } from '../App';\nimport AddIcon from '@material-ui/icons/Add';\nimport './AllSongs.css';\nimport CurrentPlaying from './CurrentPlaying';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar faker = require('faker');\n\nexport const currentSongtoPlayContext = /*#__PURE__*/React.createContext();\n\nconst randomTimeGenerator = () => {\n  const randomNumber = Math.random() * 10;\n  return randomNumber.toFixed(2);\n};\n\nfunction AllSongs() {\n  _s();\n\n  const albums = useContext(AlbumContext);\n  const songs = useContext(SongsContext);\n  var randomName = faker.name.findName();\n  const TitleTrack = '';\n  const Duration = '';\n\n  const eventSongHandler = e => {\n    const domelements = e.target;\n    TitleTrack = domelements.querySelectorAll(\".TrackTitle\")[0].innerHTML;\n    Duration = domelements.querySelectorAll(\".Duration\")[0].innerHTML;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SongsWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TitleHeading\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Songimg\",\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"TrackTitleHeading\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"DurationHeading\",\n        children: \"Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"SingerHeading\",\n        children: \"Artist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"AlbumHeading\",\n        children: \"Album\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"AddtoPlaylist\",\n        children: \" Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), songs && songs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"EachSongContainer\",\n      onClick: eventSongHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: song.thumbnailUrl,\n        className: \"Img-thumbnail\",\n        alt: \"thumbnail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"TrackTitle\",\n        children: [song.title.charAt(0).toUpperCase() + song.title.slice(1), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"tooltiptext\",\n          children: song.title.charAt(0).toUpperCase() + song.title.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 99\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"DurationofSong\",\n        children: randomTimeGenerator()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Singer\",\n        children: faker.name.findName()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"AlbumName\",\n        children: [\"  \", albums && albums.map(album => album.id === song.albumId && album.title)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(AddIcon, {\n        className: \"AddtoFav\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AllSongs, \"9Mn7APe+gX+tzIcV7eaxIqTcXBU=\");\n\n_c = AllSongs;\nexport default AllSongs;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllSongs\");","map":{"version":3,"sources":["/Users/sundarakrishnan/Desktop/MusicApplication/music-application/src/components/AllSongs.js"],"names":["React","useContext","useEffect","useState","AlbumContext","SongsContext","AddIcon","CurrentPlaying","faker","require","currentSongtoPlayContext","createContext","randomTimeGenerator","randomNumber","Math","random","toFixed","AllSongs","albums","songs","randomName","name","findName","TitleTrack","Duration","eventSongHandler","e","domelements","target","querySelectorAll","innerHTML","map","song","thumbnailUrl","title","charAt","toUpperCase","slice","album","id","albumId"],"mappings":"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","sourcesContent":["import React, {useContext,useEffect,useState} from 'react'\nimport {AlbumContext,SongsContext} from '../App'\nimport AddIcon from '@material-ui/icons/Add';\nimport './AllSongs.css'\nimport CurrentPlaying from './CurrentPlaying';\nvar faker = require('faker');\n\n\n\nexport const currentSongtoPlayContext=React.createContext()\n\nconst randomTimeGenerator=()=>{\n    const randomNumber=Math.random()*10;\n    return randomNumber.toFixed(2)\n}\n\nfunction AllSongs() {\n\n\n\n\n    const albums=useContext(AlbumContext);\n    const songs=useContext(SongsContext);\n    var randomName = faker.name.findName(); \n    const TitleTrack='';\n    const Duration='';\n\n    const eventSongHandler=(e) =>{\n        const domelements = e.target\n        TitleTrack= domelements.querySelectorAll(\".TrackTitle\")[0].innerHTML;\n        Duration= domelements.querySelectorAll(\".Duration\")[0].innerHTML;\n      }\n  \n\n    return (\n        <div className='SongsWrapper'>\n\n        <div className='TitleHeading'>\n        <p className='Songimg'>Image</p> \n        <p className='TrackTitleHeading'>Title</p>\n        <p className='DurationHeading'>Time</p>\n         <p className='SingerHeading'>Artist</p>\n         <p className='AlbumHeading'>Album</p>\n        <p className='AddtoPlaylist'> Playlist</p>\n     </div>\n   \n        {songs && songs.map(song=>(\n            \n            <div className='EachSongContainer' onClick={eventSongHandler}>\n            <img src={song.thumbnailUrl} className='Img-thumbnail' alt='thumbnail'/> \n            <p className='TrackTitle' >{song.title.charAt(0).toUpperCase() + song.title.slice(1)} <span class=\"tooltiptext\">{song.title.charAt(0).toUpperCase() + song.title.slice(1)}</span></p>\n            <p className='DurationofSong'>{randomTimeGenerator()}</p>\n             <p className='Singer'>{faker.name.findName()}</p>\n             <p className='AlbumName'>  { albums && albums.map(album =>(\n                    (album.id===song.albumId) && album.title \n               )) }</p>\n           \n      \n                <AddIcon className='AddtoFav'/>\n     \n         </div>\n))} \n        \n        \n        </div>\n    )\n}\n\nexport default AllSongs\n\n\n\n"]},"metadata":{},"sourceType":"module"}