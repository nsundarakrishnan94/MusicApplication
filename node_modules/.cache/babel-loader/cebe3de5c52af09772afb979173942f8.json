{"ast":null,"code":"var _jsxFileName = \"/Users/sundarakrishnan/Desktop/MusicApplication/music-application/src/components/AlbumSongsList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport './AlbumSongsList.css';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { CurrentAlbumSelected } from '../App';\nimport { AlbumContext, SongsContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AlbumSongsList() {\n  _s();\n\n  const albums = useContext(AlbumContext);\n  const songs = useContext(SongsContext);\n  const [CurrentAlbumId, setCurrentAlbumId] = useContext(CurrentAlbumSelected);\n  const [filteredData, setfilteredData] = useState(songs);\n  let filteredSongs;\n  let albumTitle = '';\n\n  const filterData = CurrentAlbumId => {\n    if (CurrentAlbumId) {\n      const data = songs.filter(song => {\n        return song.albumId == CurrentAlbumId;\n      });\n      setfilteredData(data);\n    }\n  };\n\n  console.log(filteredData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AlbumSongsListContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/album\",\n      children: [/*#__PURE__*/_jsxDEV(ArrowBackIosIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"../images/unkownAlbum.png\",\n      className: \"SpecificAlbumImgLarge\",\n      alt: \"unknownAlbum\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), albums.map(album => {\n      if (album.id == CurrentAlbumId) {\n        albumTitle = album.title;\n      }\n    }), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"FullAlbumName\",\n      children: albumTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"TotalSongs\",\n      children: \"Total number of songs $\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      className: \"btn-album\",\n      children: [/*#__PURE__*/_jsxDEV(PlayArrowIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 51\n      }, this), \"Play\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      className: \"btn-album\",\n      children: [/*#__PURE__*/_jsxDEV(ShuffleIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 51\n      }, this), \"Shuffle\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AlbumSongsList, \"4tIMDxnjyRt+EcrnYy+8RCNFze8=\");\n\n_c = AlbumSongsList;\nexport default AlbumSongsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbumSongsList\");","map":{"version":3,"sources":["/Users/sundarakrishnan/Desktop/MusicApplication/music-application/src/components/AlbumSongsList.js"],"names":["React","useContext","useState","PlayArrowIcon","ShuffleIcon","ArrowBackIosIcon","BrowserRouter","Router","Switch","Route","Link","CurrentAlbumSelected","AlbumContext","SongsContext","AlbumSongsList","albums","songs","CurrentAlbumId","setCurrentAlbumId","filteredData","setfilteredData","filteredSongs","albumTitle","filterData","data","filter","song","albumId","console","log","map","album","id","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,sBAAP;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,MAAjC,EAAyCC,KAAzC,EAAgDC,IAAhD,QAA2D,kBAA3D;AACA,SAAQC,oBAAR,QAAmC,QAAnC;AACA,SAAQC,YAAR,EAAqBC,YAArB,QAAwC,QAAxC;;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AAEtB,QAAMC,MAAM,GAACd,UAAU,CAACW,YAAD,CAAvB;AACA,QAAMI,KAAK,GAACf,UAAU,CAACY,YAAD,CAAtB;AAGA,QAAM,CAACI,cAAD,EAAgBC,iBAAhB,IAAqCjB,UAAU,CAACU,oBAAD,CAArD;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAACc,KAAD,CAAhD;AAGA,MAAIK,aAAJ;AACA,MAAIC,UAAU,GAAC,EAAf;;AAGA,QAAMC,UAAU,GAAIN,cAAD,IAAoB;AAEnC,QAAIA,cAAJ,EACA;AACE,YAAMO,IAAI,GAAGR,KAAK,CAACS,MAAN,CAAaC,IAAI,IAAI;AAChC,eAAQA,IAAI,CAACC,OAAL,IAAcV,cAAtB;AAED,OAHY,CAAb;AAIAG,MAAAA,eAAe,CAACI,IAAD,CAAf;AACD;AACF,GAVH;;AAaJI,EAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;AAKI,sBAEI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA,4BACQ,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAA,8BACA,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADR,eAKQ;AAAK,MAAA,GAAG,EAAC,2BAAT;AAAqC,MAAA,SAAS,EAAC,uBAA/C;AAAuE,MAAA,GAAG,EAAC;AAA3E;AAAA;AAAA;AAAA;AAAA,YALR,EAMSJ,MAAM,CAACe,GAAP,CAAWC,KAAK,IAAE;AACf,UAAGA,KAAK,CAACC,EAAN,IAAUf,cAAb,EAA4B;AACxBK,QAAAA,UAAU,GAACS,KAAK,CAACE,KAAjB;AACH;AAEJ,KALA,CANT,eAYQ;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA,gBAA+BX;AAA/B;AAAA;AAAA;AAAA;AAAA,YAZR,eAaQ;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbR,eAcQ;AAAG,MAAA,IAAI,EAAC,GAAR;AAAY,MAAA,SAAS,EAAC,WAAtB;AAAA,8BAAkC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,YAdR,eAeQ;AAAG,MAAA,IAAI,EAAC,GAAR;AAAY,MAAA,SAAS,EAAC,WAAtB;AAAA,8BAAkC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,YAfR;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAwBH;;GAxDQR,c;;KAAAA,c;AA0DT,eAAeA,cAAf","sourcesContent":["import React, {useContext,useState} from 'react'\nimport './AlbumSongsList.css'\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\nimport {CurrentAlbumSelected} from '../App'\nimport {AlbumContext,SongsContext} from '../App'\n\nfunction AlbumSongsList() {\n    \n    const albums=useContext(AlbumContext);\n    const songs=useContext(SongsContext);\n\n\n    const [CurrentAlbumId,setCurrentAlbumId] = useContext(CurrentAlbumSelected);\n    const [filteredData, setfilteredData] = useState(songs);\n\n\n    let filteredSongs;\n    let albumTitle='';\n\n\n    const filterData = (CurrentAlbumId) => {\n      \n        if (CurrentAlbumId)\n        {\n          const data = songs.filter(song => {\n            return  song.albumId==CurrentAlbumId\n            \n          });\n          setfilteredData(data);\n        }\n      }\n    \n\nconsole.log(filteredData)\n\n\n\n\n    return (\n        \n        <div className='AlbumSongsListContainer'>\n                <Link to='/album' > \n                <ArrowBackIosIcon/>\n                <br></br>\n                </Link>\n                <img src='../images/unkownAlbum.png' className='SpecificAlbumImgLarge' alt='unknownAlbum'/> \n                {albums.map(album=>{\n                    if(album.id==CurrentAlbumId){\n                        albumTitle=album.title\n                    }\n                \n                })}\n                <h1 className='FullAlbumName'>{albumTitle}</h1>\n                <h4 className='TotalSongs'>Total number of songs ${}</h4>\n                <a href='#' className='btn-album'><PlayArrowIcon/>Play</a>\n                <a href='#' className='btn-album'><ShuffleIcon/>Shuffle</a>\n                \n        \n        \n    \n        </div>\n    )\n}\n\nexport default AlbumSongsList\n"]},"metadata":{},"sourceType":"module"}