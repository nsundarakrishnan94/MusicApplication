{"ast":null,"code":"var _jsxFileName = \"/Users/sundarakrishnan/Desktop/MusicApplication/music-application/src/components/Browse.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AlbumContext, SongsContext } from '../App';\nimport AddIcon from '@material-ui/icons/Add';\nimport './Browser.css';\nimport CurrentPlaying from './CurrentPlaying';\nimport { CurrentSongDetails } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nlet faker = require('faker');\n\nexport const CurrentSongTitle = /*#__PURE__*/React.createContext();\nexport const CurrentSongTime = /*#__PURE__*/React.createContext();\n\nconst randomTimeGenerator = () => {\n  const randomNumber = Math.random() * 10;\n  return randomNumber.toFixed(2);\n};\n\nfunction Browse() {\n  _s();\n\n  const [CurrentTitle, CurrentTime, setCurrentTime, setCurrentTitle] = useContext(CurrentSongDetails);\n  const albums = useContext(AlbumContext);\n  const songs = useContext(SongsContext);\n  const [searchSong, setSearchSong] = useState(\"\");\n  const [data, setData] = useState(songs);\n\n  const handleChange = value => {\n    setSearchSong(value);\n    filterData(value);\n  };\n\n  const filterData = value => {\n    const lowercasedValue = value.toLowerCase().trim();\n    if (lowercasedValue === \"\") setData(songs);else {\n      const filteredData = songs.filter(song => {\n        return song.title.toLowerCase().includes(lowercasedValue);\n      });\n      setData(filteredData);\n    }\n  };\n\n  var randomName = faker.name.findName();\n  var TitleTrack = '';\n  var Duration = '';\n  let htmlSongs;\n  const searchbar = document.getElementById('searchbar');\n  const songsList = document.getElementsByClassName('SongsList')[0]; // const  displayFilteredSong=(filteredSongs)=>{\n  //     return htmlSongs= filteredSongs && filteredSongs.map(song=>{\n  //             return ` <li className='EachSongContainer' onClick={eventSongHandler}>\n  //             <span className='ImgContainer'> <img src=${song.thumbnailUrl} className='Img-thumbnail' alt='thumbnail'/> </span>\n  //             <p className='TrackTitle' >${song.title.charAt(0).toUpperCase() + song.title.slice(1)} <span class=\"tooltiptext\">${song.title.charAt(0).toUpperCase() + song.title.slice(1)}</span></p>\n  //            <p className='DurationofSong'>${randomTimeGenerator()}</p>  \n  //            <p className='Singer'>${faker.name.findName()}</p>   \n  //            <p className='AlbumName'>${ albums && albums.map(album =>(\n  //                (album.id===song.albumId) && album.title \n  //           )) }</p>    \n  //         </li> ` ;\n  //            }).join('');\n  // }\n  // useEffect(() => {\n  //     let htmlObject;\n  //     if(searchbar){\n  //         searchbar.addEventListener('keyup', (e) => { \n  //             const searchString=e.target.value.toLowerCase();\n  //             const filteredSongs=songs.filter((song)=>{ \n  //                     return song.title.toLowerCase().includes(searchString)\n  //             })\n  //             const finalResult=displayFilteredSong(filteredSongs);\n  //             htmlObject = document.createElement('div');\n  //              htmlObject.innerHTML = finalResult;\n  //              songsList.appendChild(htmlObject);\n  //         });\n  //     }\n  // }, [htmlSongs])\n\n  const eventSongHandler = e => {\n    const domelements = e.target;\n    console.log(domelements);\n    TitleTrack = domelements.querySelectorAll(\".TrackTitle\")[0].innerHTML;\n    Duration = domelements.querySelectorAll(\".DurationofSong\")[0].innerHTML;\n    console.log(Duration);\n    setCurrentTitle(TitleTrack);\n    setCurrentTime(Duration);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"searchbar\",\n        id: \"searchbar\",\n        placeholder: \"Search for a song\",\n        value: searchSong,\n        onChange: e => handleChange(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"SongsWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"TitleHeading\",\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"Songimg\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"TrackTitleHeading\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"DurationHeading\",\n          children: \"Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"SingerHeading\",\n          children: \"Artist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"AlbumHeading\",\n          children: \"Album\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"AddtoPlaylist\",\n          children: \"Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"SongsList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Browse, \"7Nm6z+XwCkn6Tsa1G7yOrAlae98=\");\n\n_c = Browse;\nexport default Browse;\n\nvar _c;\n\n$RefreshReg$(_c, \"Browse\");","map":{"version":3,"sources":["/Users/sundarakrishnan/Desktop/MusicApplication/music-application/src/components/Browse.js"],"names":["React","useContext","useEffect","useState","AlbumContext","SongsContext","AddIcon","CurrentPlaying","CurrentSongDetails","faker","require","CurrentSongTitle","createContext","CurrentSongTime","randomTimeGenerator","randomNumber","Math","random","toFixed","Browse","CurrentTitle","CurrentTime","setCurrentTime","setCurrentTitle","albums","songs","searchSong","setSearchSong","data","setData","handleChange","value","filterData","lowercasedValue","toLowerCase","trim","filteredData","filter","song","title","includes","randomName","name","findName","TitleTrack","Duration","htmlSongs","searchbar","document","getElementById","songsList","getElementsByClassName","eventSongHandler","e","domelements","target","console","log","querySelectorAll","innerHTML"],"mappings":"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","sourcesContent":["import React, {useContext,useEffect,useState} from 'react'\nimport {AlbumContext,SongsContext} from '../App'\nimport AddIcon from '@material-ui/icons/Add';\nimport './Browser.css'\nimport CurrentPlaying from './CurrentPlaying';\nimport {CurrentSongDetails} from '../App'\nlet faker = require('faker');\n\n\nexport const CurrentSongTitle=React.createContext()\nexport const CurrentSongTime=React.createContext()\n\nconst randomTimeGenerator=()=>{\n    const randomNumber=Math.random()*10;\n    return randomNumber.toFixed(2)\n}\n\n\nfunction Browse() {\n\n\n    const [CurrentTitle, CurrentTime, setCurrentTime,setCurrentTitle] = useContext(CurrentSongDetails);\n\n    const albums=useContext(AlbumContext);\n    const songs=useContext(SongsContext);\n\n\n\n const [searchSong, setSearchSong] = useState(\"\");\n  const [data, setData] = useState(songs);\n\n\n\n\n  const handleChange = value => {\n    setSearchSong(value);\n    filterData(value);\n  };\n \n  \n  \n  const filterData = (value) => {\n    const lowercasedValue = value.toLowerCase().trim();\n    if (lowercasedValue === \"\") setData(songs);\n    else {\n      const filteredData = songs.filter(song => {\n        return  song.title.toLowerCase().includes(lowercasedValue)\n        \n      });\n      setData(filteredData);\n    }\n  }\n\n\n\n\n\n   \n    var randomName = faker.name.findName(); \n    var TitleTrack='';\n    var Duration='';\n    let htmlSongs;\n    const searchbar=document.getElementById('searchbar');\n    const songsList=document.getElementsByClassName('SongsList')[0];\n\n\n\n\n    // const  displayFilteredSong=(filteredSongs)=>{\n    //     return htmlSongs= filteredSongs && filteredSongs.map(song=>{\n    //             return ` <li className='EachSongContainer' onClick={eventSongHandler}>\n    //             <span className='ImgContainer'> <img src=${song.thumbnailUrl} className='Img-thumbnail' alt='thumbnail'/> </span>\n    //             <p className='TrackTitle' >${song.title.charAt(0).toUpperCase() + song.title.slice(1)} <span class=\"tooltiptext\">${song.title.charAt(0).toUpperCase() + song.title.slice(1)}</span></p>\n    //            <p className='DurationofSong'>${randomTimeGenerator()}</p>  \n    //            <p className='Singer'>${faker.name.findName()}</p>   \n    //            <p className='AlbumName'>${ albums && albums.map(album =>(\n    //                (album.id===song.albumId) && album.title \n    //           )) }</p>    \n    //         </li> ` ;\n    //            }).join('');\n               \n    // }\n\n\n\n    // useEffect(() => {\n    //     let htmlObject;\n    //     if(searchbar){\n    //         searchbar.addEventListener('keyup', (e) => { \n    //             const searchString=e.target.value.toLowerCase();\n    //             const filteredSongs=songs.filter((song)=>{ \n    //                     return song.title.toLowerCase().includes(searchString)\n    //             })\n\n    //             const finalResult=displayFilteredSong(filteredSongs);\n    //             htmlObject = document.createElement('div');\n    //              htmlObject.innerHTML = finalResult;\n    //              songsList.appendChild(htmlObject);\n    //         });\n    //     }\n     \n    // }, [htmlSongs])\n\n\n\n\n\n\n\n\n\n    const eventSongHandler=(e) =>{\n        const domelements = e.target\n        console.log(domelements);\n         TitleTrack= domelements.querySelectorAll(\".TrackTitle\")[0].innerHTML;\n         Duration= domelements.querySelectorAll(\".DurationofSong\")[0].innerHTML;   \n         console.log(Duration) \n        setCurrentTitle(TitleTrack);\n        setCurrentTime(Duration);\n      }\n\n\n\n\n\n\n\n\n\n    \n  \n    return (\n        <>\n        <div className='SearchWrapper'>\n            <input type='text' name='searchbar' id='searchbar' placeholder='Search for a song' value={searchSong}\n            onChange={e => handleChange(e.target.value)} />\n        </div>\n\n        <ul className='SongsWrapper'>\n\n        <li className='TitleHeading'>\n            <th className='Songimg'>Image</th>\n            <th className='TrackTitleHeading'>Title</th>\n            <th className='DurationHeading'>Time</th>\n            <th className='SingerHeading'>Artist</th>\n            <th className='AlbumHeading'>Album</th>\n            <th className='AddtoPlaylist'>Playlist</th>\n        </li>\n        \n            <ul className='SongsList'>\n                \n\n            </ul>\n\n\n        </ul>\n        </>\n    )\n}\n\n\nexport default Browse\n"]},"metadata":{},"sourceType":"module"}