{"ast":null,"code":"var _jsxFileName = \"/Users/sundarakrishnan/Desktop/MusicApplication/music-application/src/components/SpecificPlaylist.js\";\nimport React, { useContext } from 'react';\nimport { AlbumContext, SongsContext } from '../App';\nimport AddIcon from '@material-ui/icons/Add';\nimport './AllSongs.css';\nimport CurrentPlaying from './CurrentPlaying';\nimport { CurrentSongDetails } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nlet faker = require('faker');\n\nexport const CurrentSongTitle = /*#__PURE__*/React.createContext();\nexport const CurrentSongTime = /*#__PURE__*/React.createContext();\n\nconst randomTimeGenerator = () => {\n  const randomNumber = Math.random() * 10;\n  return randomNumber.toFixed(2);\n};\n\nconst [CurrentTitle, CurrentTime, CurrentImg, setCurrentTime, setCurrentTitle, setCuttentImg] = useContext(CurrentSongDetails);\nconst albums = useContext(AlbumContext);\nconst songs = useContext(SongsContext);\nconst [searchSong, setSearchSong] = useState(\"\");\nconst [initialData, setInitialData] = useState(songs);\nconst [data, setData] = useState(songs);\n\nconst handleChange = value => {\n  setSearchSong(value);\n  filterData(value);\n};\n\nconst filterData = value => {\n  const lowercasedValue = value.toLowerCase().trim();\n  if (lowercasedValue === \"\") setData(songs);else {\n    const filteredData = songs.filter(song => {\n      return song.title.toLowerCase().includes(lowercasedValue);\n    });\n    setData(filteredData);\n    console.log(data);\n    console.log(filteredData);\n  }\n};\n\nvar randomName = faker.name.findName();\nlet TitleTrack = '';\nlet Duration = '';\nlet Img;\nlet htmlSongs;\nconst searchbar = document.getElementById('searchbar');\nconst songsList = document.getElementsByClassName('SongsList')[0];\n\nconst eventSongHandler = e => {\n  const domelements = e.target;\n  console.log(domelements);\n  TitleTrack = domelements.querySelectorAll(\".TrackTitle\")[0].innerHTML;\n  Duration = domelements.querySelectorAll(\".DurationofSong\")[0].innerHTML;\n  Img = domelements.querySelectorAll(\".Img-thumbnail\").src;\n  console.log(Duration);\n  setCurrentTitle(TitleTrack);\n  setCurrentTime(Duration);\n  setCuttentImg(Img);\n};\n\nfunction SpecificPlaylist() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"ActiveTitle\",\n      children: \"Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"searchbar\",\n        id: \"searchbar\",\n        placeholder: \"Search for a song\",\n        value: searchSong,\n        onChange: e => handleChange(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"SongsWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"TitleHeading\",\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"Songimg\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"TrackTitleHeading\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"DurationHeading\",\n          children: \"Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"SingerHeading\",\n          children: \"Artist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"AlbumHeading\",\n          children: \"Album\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"AddtoPlaylist\",\n          children: \"Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"SongsList\",\n        children: data.map(song => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"EachSongContainer\",\n            onClick: eventSongHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ImgContainer\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                src: song.thumbnailUrl,\n                className: \"Img-thumbnail\",\n                alt: \"thumbnail\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 53\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"TrackTitle\",\n              children: [song.title.charAt(0).toUpperCase() + song.title.slice(1), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"tooltiptext\",\n                children: song.title.charAt(0).toUpperCase() + song.title.slice(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 107\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"DurationofSong\",\n              children: randomTimeGenerator()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"Singer\",\n              children: faker.name.findName()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"AlbumName\",\n              children: albums && albums.map(album => album.id === song.albumId && album.title)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(AddIcon, {\n              className: \"AddtoFav\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_c = SpecificPlaylist;\nexport default SpecificPlaylist;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpecificPlaylist\");","map":{"version":3,"sources":["/Users/sundarakrishnan/Desktop/MusicApplication/music-application/src/components/SpecificPlaylist.js"],"names":["React","useContext","AlbumContext","SongsContext","AddIcon","CurrentPlaying","CurrentSongDetails","faker","require","CurrentSongTitle","createContext","CurrentSongTime","randomTimeGenerator","randomNumber","Math","random","toFixed","CurrentTitle","CurrentTime","CurrentImg","setCurrentTime","setCurrentTitle","setCuttentImg","albums","songs","searchSong","setSearchSong","useState","initialData","setInitialData","data","setData","handleChange","value","filterData","lowercasedValue","toLowerCase","trim","filteredData","filter","song","title","includes","console","log","randomName","name","findName","TitleTrack","Duration","Img","htmlSongs","searchbar","document","getElementById","songsList","getElementsByClassName","eventSongHandler","e","domelements","target","querySelectorAll","innerHTML","src","SpecificPlaylist","map","thumbnailUrl","charAt","toUpperCase","slice","album","id","albumId"],"mappings":"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","sourcesContent":["import React,{useContext} from 'react'\nimport {AlbumContext,SongsContext} from '../App'\nimport AddIcon from '@material-ui/icons/Add';\nimport './AllSongs.css'\nimport CurrentPlaying from './CurrentPlaying';\nimport {CurrentSongDetails} from '../App'\nlet faker = require('faker');\n\n\nexport const CurrentSongTitle=React.createContext()\nexport const CurrentSongTime=React.createContext()\n\nconst randomTimeGenerator=()=>{\n    const randomNumber=Math.random()*10;\n    return randomNumber.toFixed(2)\n}\n\n\n\n\nconst [CurrentTitle, CurrentTime,CurrentImg, setCurrentTime,setCurrentTitle,setCuttentImg] = useContext(CurrentSongDetails);\n\nconst albums=useContext(AlbumContext);\nconst songs=useContext(SongsContext);\n\n\n\nconst [searchSong, setSearchSong] = useState(\"\");\nconst [initialData, setInitialData] = useState(songs);\nconst [data, setData] = useState(songs);\n\n\n\n\nconst handleChange = value => {\nsetSearchSong(value);\nfilterData(value);\n};\n\n\n\n\n\n\nconst filterData = (value) => {\nconst lowercasedValue = value.toLowerCase().trim();\nif (lowercasedValue === \"\") setData(songs);\nelse {\n  const filteredData = songs.filter(song => {\n    return  song.title.toLowerCase().includes(lowercasedValue)\n    \n  });\n  setData(filteredData);\n  console.log(data);\n  console.log(filteredData);\n}\n}\n\n\n\n\n\n\nvar randomName = faker.name.findName(); \nlet TitleTrack='';\nlet Duration='';\nlet Img;\nlet htmlSongs;\nconst searchbar=document.getElementById('searchbar');\nconst songsList=document.getElementsByClassName('SongsList')[0];\n\n\n\n\nconst eventSongHandler=(e) =>{\n    const domelements = e.target\n    console.log(domelements);\n     TitleTrack= domelements.querySelectorAll(\".TrackTitle\")[0].innerHTML;\n     Duration= domelements.querySelectorAll(\".DurationofSong\")[0].innerHTML;  \n     Img=  domelements.querySelectorAll(\".Img-thumbnail\").src;  \n     console.log(Duration) \n    setCurrentTitle(TitleTrack);\n    setCurrentTime(Duration);\n    setCuttentImg(Img);\n  }\n\n\n\n\nfunction SpecificPlaylist() {\n    return (\n        <>\n        <p className='ActiveTitle'>Playlist</p>\n        <div className='SearchWrapper'>\n            <input type='text' name='searchbar' id='searchbar' placeholder='Search for a song' value={searchSong}\n            onChange={e => handleChange(e.target.value)} />\n        </div>\n\n        <ul className='SongsWrapper'>\n\n        <li className='TitleHeading'>\n            <th className='Songimg'>Image</th>\n            <th className='TrackTitleHeading'>Title</th>\n            <th className='DurationHeading'>Time</th>\n            <th className='SingerHeading'>Artist</th>\n            <th className='AlbumHeading'>Album</th>\n            <th className='AddtoPlaylist'>Playlist</th>\n        </li>\n        \n            <ul className='SongsList'>\n               {\n                data.map(song=>{\n                  return   <li className='EachSongContainer' onClick={eventSongHandler}>\n                    <span className='ImgContainer'> <img src={song.thumbnailUrl} className='Img-thumbnail' alt='thumbnail'/> </span>\n                    <p className='TrackTitle' >{song.title.charAt(0).toUpperCase() + song.title.slice(1)} <span class=\"tooltiptext\">{song.title.charAt(0).toUpperCase() + song.title.slice(1)}</span></p>\n                   <p className='DurationofSong'>{randomTimeGenerator()}</p>  \n                   <p className='Singer'>{faker.name.findName()}</p>   \n                   <p className='AlbumName'>{ albums && albums.map(album =>(\n                       (album.id===song.albumId) && album.title \n                  )) }</p>   \n                  <AddIcon className='AddtoFav'/> \n                </li>\n                   \n                })\n               }\n              \n\n            </ul>\n\n\n        </ul>\n        </>\n    )\n}\n\nexport default SpecificPlaylist\n"]},"metadata":{},"sourceType":"module"}