{"ast":null,"code":"var _jsxFileName = \"/Users/sundarakrishnan/Desktop/MusicApplication/music-application/src/components/AllSongs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AlbumContext, SongsContext } from '../App';\nimport AddIcon from '@material-ui/icons/Add';\nimport './AllSongs.css';\nimport CurrentPlaying from './CurrentPlaying';\nimport { CurrentSongDetails } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nlet faker = require('faker');\n\nexport const CurrentSongTitle = /*#__PURE__*/React.createContext();\nexport const CurrentSongTime = /*#__PURE__*/React.createContext();\n\nconst randomTimeGenerator = () => {\n  const randomNumber = Math.random() * 10;\n  return randomNumber.toFixed(2);\n};\n\nfunction AllSongs() {\n  _s();\n\n  const [CurrentTitle, CurrentTime, setCurrentTime, setCurrentTitle] = useContext(CurrentSongDetails);\n  const albums = useContext(AlbumContext);\n  const songs = useContext(SongsContext);\n  var randomName = faker.name.findName();\n  var TitleTrack = '';\n  var Duration = ''; //this is to provide current playing song to currentplaying component\n  // const [currentTitle, setcurrentTitle]= useState('');\n  // const [currentTime, setcurrentTime]= useState('');\n\n  const eventSongHandler = e => {\n    const domelements = e.target;\n    console.log(domelements);\n    TitleTrack = domelements.querySelectorAll(\".TrackTitle\")[0].innerHTML;\n    Duration = domelements.querySelectorAll(\".DurationofSong\")[0].innerHTML;\n    setCurrentTitle(TitleTrack);\n    setCurrentTime(Duration);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"SongsWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"TitleHeading\",\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"Songimg\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"TrackTitleHeading\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"DurationHeading\",\n          children: \"Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"SingerHeading\",\n          children: \"Artist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"AlbumHeading\",\n          children: \"Album\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"AddtoPlaylist\",\n          children: \"Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), songs && songs.map(song => /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"EachSongContainer\",\n        onClick: eventSongHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"ImgContainer\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: song.thumbnailUrl,\n            className: \"Img-thumbnail\",\n            alt: \"thumbnail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 56\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"TrackTitle\",\n          children: [song.title.charAt(0).toUpperCase() + song.title.slice(1), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"tooltiptext\",\n            children: song.title.charAt(0).toUpperCase() + song.title.slice(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 113\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"DurationofSong\",\n          children: randomTimeGenerator()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"Singer\",\n          children: faker.name.findName()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"AlbumName\",\n          children: albums && albums.map(album => album.id === song.albumId && album.title)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"AddtoFav\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 22\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(AllSongs, \"QyfWVCUKHOwyr5ZaZ3InsYVGRSA=\");\n\n_c = AllSongs;\nexport default AllSongs;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllSongs\");","map":{"version":3,"sources":["/Users/sundarakrishnan/Desktop/MusicApplication/music-application/src/components/AllSongs.js"],"names":["React","useContext","useEffect","useState","AlbumContext","SongsContext","AddIcon","CurrentPlaying","CurrentSongDetails","faker","require","CurrentSongTitle","createContext","CurrentSongTime","randomTimeGenerator","randomNumber","Math","random","toFixed","AllSongs","CurrentTitle","CurrentTime","setCurrentTime","setCurrentTitle","albums","songs","randomName","name","findName","TitleTrack","Duration","eventSongHandler","e","domelements","target","console","log","querySelectorAll","innerHTML","map","song","thumbnailUrl","title","charAt","toUpperCase","slice","album","id","albumId"],"mappings":"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","sourcesContent":["import React, {useContext,useEffect,useState} from 'react'\nimport {AlbumContext,SongsContext} from '../App'\nimport AddIcon from '@material-ui/icons/Add';\nimport './AllSongs.css'\nimport CurrentPlaying from './CurrentPlaying';\nimport {CurrentSongDetails} from '../App'\nlet faker = require('faker');\n\n\nexport const CurrentSongTitle=React.createContext()\nexport const CurrentSongTime=React.createContext()\n\nconst randomTimeGenerator=()=>{\n    const randomNumber=Math.random()*10;\n    return randomNumber.toFixed(2)\n}\n\nfunction AllSongs() {\n\n    const [CurrentTitle, CurrentTime, setCurrentTime,setCurrentTitle] = useContext(CurrentSongDetails);\n\n    const albums=useContext(AlbumContext);\n    const songs=useContext(SongsContext);\n    var randomName = faker.name.findName(); \n    var TitleTrack='';\n    var Duration='';\n    //this is to provide current playing song to currentplaying component\n    // const [currentTitle, setcurrentTitle]= useState('');\n    // const [currentTime, setcurrentTime]= useState('');\n\n\n   \n\n    const eventSongHandler=(e) =>{\n        const domelements = e.target\n        console.log(domelements);\n         TitleTrack= domelements.querySelectorAll(\".TrackTitle\")[0].innerHTML;\n         Duration= domelements.querySelectorAll(\".DurationofSong\")[0].innerHTML;    \n        setCurrentTitle(TitleTrack);\n        setCurrentTime(Duration);\n      }\n\n\n  \n\n\n\n\n\n\n    \n  \n    return (\n        <>\n\n        <table className='SongsWrapper'>\n\n        <tr className='TitleHeading'>\n            <th className='Songimg'>Image</th>\n            <th className='TrackTitleHeading'>Title</th>\n            <th className='DurationHeading'>Time</th>\n            <th className='SingerHeading'>Artist</th>\n            <th className='AlbumHeading'>Album</th>\n            <th className='AddtoPlaylist'>Playlist</th>\n        </tr>\n        \n        {songs && songs.map(song=>(\n            \n                     <tr className='EachSongContainer' onClick={eventSongHandler}>\n                         <td className='ImgContainer'> <img src={song.thumbnailUrl} className='Img-thumbnail' alt='thumbnail'/> </td>\n                         <td className='TrackTitle' >{song.title.charAt(0).toUpperCase() + song.title.slice(1)} <span class=\"tooltiptext\">{song.title.charAt(0).toUpperCase() + song.title.slice(1)}</span></td>\n                        <td className='DurationofSong'>{randomTimeGenerator()}</td>  \n                        <td className='Singer'>{faker.name.findName()}</td>   \n                        <td className='AlbumName'>{ albums && albums.map(album =>(\n                            (album.id===song.albumId) && album.title \n                       )) }</td>   \n                       <td className='AddtoFav'> <AddIcon /></td>         \n                     </tr>    \n))} \n        </table>\n        </>\n    )\n}\n\nexport default AllSongs\n\n\n\n"]},"metadata":{},"sourceType":"module"}