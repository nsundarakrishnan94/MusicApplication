{"ast":null,"code":"var _jsxFileName = \"/Users/sundarakrishnan/Desktop/MusicApplication/music-application/src/components/AllSongs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AlbumContext, SongsContext } from '../App';\nimport AddIcon from '@material-ui/icons/Add';\nimport './AllSongs.css';\nimport CurrentPlaying from './CurrentPlaying';\nimport { CurrentSongDetails } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nlet faker = require('faker');\n\nexport const CurrentSongTitle = /*#__PURE__*/React.createContext();\nexport const CurrentSongTime = /*#__PURE__*/React.createContext();\n\nconst randomTimeGenerator = () => {\n  const randomNumber = Math.random() * 10;\n  return randomNumber.toFixed(2);\n};\n\nfunction AllSongs() {\n  _s();\n\n  const [CurrentTitle, CurrentTime, setCurrentTime, setCurrentTitle] = useContext(CurrentSongDetails);\n  const albums = useContext(AlbumContext);\n  const songs = useContext(SongsContext);\n  const [searchSong, setSearchSong] = useState(\"\");\n  const [data, setData] = useState(songs);\n  console.log(data);\n\n  const handleChange = value => {\n    setSearchSong(value);\n    filterData(value);\n  };\n\n  const filterData = value => {\n    const lowercasedValue = value.toLowerCase().trim();\n    if (lowercasedValue === \"\") setData(songs);else {\n      const filteredData = songs.filter(song => {\n        return song.title.toLowerCase().includes(lowercasedValue);\n      });\n      setData(filteredData);\n      console.log(data);\n      console.log(filteredData);\n    }\n  };\n\n  var randomName = faker.name.findName();\n  var TitleTrack = '';\n  var Duration = '';\n  let htmlSongs;\n  const searchbar = document.getElementById('searchbar');\n  const songsList = document.getElementsByClassName('SongsList')[0];\n\n  const eventSongHandler = e => {\n    const domelements = e.target;\n    console.log(domelements);\n    TitleTrack = domelements.querySelectorAll(\".TrackTitle\")[0].innerHTML;\n    Duration = domelements.querySelectorAll(\".DurationofSong\")[0].innerHTML;\n    console.log(Duration);\n    setCurrentTitle(TitleTrack);\n    setCurrentTime(Duration);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"ActiveTitle\",\n      children: \"All Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"searchbar\",\n        id: \"searchbar\",\n        placeholder: \"Search for a song\",\n        value: searchSong,\n        onChange: e => handleChange(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"SongsWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"TitleHeading\",\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"Songimg\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"TrackTitleHeading\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"DurationHeading\",\n          children: \"Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"SingerHeading\",\n          children: \"Artist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"AlbumHeading\",\n          children: \"Album\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"AddtoPlaylist\",\n          children: \"Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"SongsList\",\n        children: data.map(song => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"EachSongContainer\",\n            onClick: eventSongHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ImgContainer\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                src: song.thumbnailUrl,\n                className: \"Img-thumbnail\",\n                alt: \"thumbnail\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 53\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"TrackTitle\",\n              children: [song.title.charAt(0).toUpperCase() + song.title.slice(1), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"tooltiptext\",\n                children: song.title.charAt(0).toUpperCase() + song.title.slice(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 107\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"DurationofSong\",\n              children: randomTimeGenerator()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"Singer\",\n              children: faker.name.findName()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"AlbumName\",\n              children: albums && albums.map(album => album.id === song.albumId && album.title)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(AddIcon, {\n              className: \"AddtoFav\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AllSongs, \"7Nm6z+XwCkn6Tsa1G7yOrAlae98=\");\n\n_c = AllSongs;\nexport default AllSongs;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllSongs\");","map":{"version":3,"sources":["/Users/sundarakrishnan/Desktop/MusicApplication/music-application/src/components/AllSongs.js"],"names":["React","useContext","useEffect","useState","AlbumContext","SongsContext","AddIcon","CurrentPlaying","CurrentSongDetails","faker","require","CurrentSongTitle","createContext","CurrentSongTime","randomTimeGenerator","randomNumber","Math","random","toFixed","AllSongs","CurrentTitle","CurrentTime","setCurrentTime","setCurrentTitle","albums","songs","searchSong","setSearchSong","data","setData","console","log","handleChange","value","filterData","lowercasedValue","toLowerCase","trim","filteredData","filter","song","title","includes","randomName","name","findName","TitleTrack","Duration","htmlSongs","searchbar","document","getElementById","songsList","getElementsByClassName","eventSongHandler","e","domelements","target","querySelectorAll","innerHTML","map","thumbnailUrl","charAt","toUpperCase","slice","album","id","albumId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA0BC,SAA1B,EAAoCC,QAApC,QAAmD,OAAnD;AACA,SAAQC,YAAR,EAAqBC,YAArB,QAAwC,QAAxC;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAO,gBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAQC,kBAAR,QAAiC,QAAjC;;;;AACA,IAAIC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AAGA,OAAO,MAAMC,gBAAgB,gBAACX,KAAK,CAACY,aAAN,EAAvB;AACP,OAAO,MAAMC,eAAe,gBAACb,KAAK,CAACY,aAAN,EAAtB;;AAEP,MAAME,mBAAmB,GAAC,MAAI;AAC1B,QAAMC,YAAY,GAACC,IAAI,CAACC,MAAL,KAAc,EAAjC;AACA,SAAOF,YAAY,CAACG,OAAb,CAAqB,CAArB,CAAP;AACH,CAHD;;AAMA,SAASC,QAAT,GAAoB;AAAA;;AAGhB,QAAM,CAACC,YAAD,EAAeC,WAAf,EAA4BC,cAA5B,EAA2CC,eAA3C,IAA8DtB,UAAU,CAACO,kBAAD,CAA9E;AAEA,QAAMgB,MAAM,GAACvB,UAAU,CAACG,YAAD,CAAvB;AACA,QAAMqB,KAAK,GAACxB,UAAU,CAACI,YAAD,CAAtB;AAIH,QAAM,CAACqB,UAAD,EAAaC,aAAb,IAA8BxB,QAAQ,CAAC,EAAD,CAA5C;AACC,QAAM,CAACyB,IAAD,EAAOC,OAAP,IAAkB1B,QAAQ,CAACsB,KAAD,CAAhC;AAIAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AAEA,QAAMI,YAAY,GAAGC,KAAK,IAAI;AAC5BN,IAAAA,aAAa,CAACM,KAAD,CAAb;AACAC,IAAAA,UAAU,CAACD,KAAD,CAAV;AACD,GAHD;;AAOA,QAAMC,UAAU,GAAID,KAAD,IAAW;AAC5B,UAAME,eAAe,GAAGF,KAAK,CAACG,WAAN,GAAoBC,IAApB,EAAxB;AACA,QAAIF,eAAe,KAAK,EAAxB,EAA4BN,OAAO,CAACJ,KAAD,CAAP,CAA5B,KACK;AACH,YAAMa,YAAY,GAAGb,KAAK,CAACc,MAAN,CAAaC,IAAI,IAAI;AACxC,eAAQA,IAAI,CAACC,KAAL,CAAWL,WAAX,GAAyBM,QAAzB,CAAkCP,eAAlC,CAAR;AAED,OAHoB,CAArB;AAIAN,MAAAA,OAAO,CAACS,YAAD,CAAP;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYO,YAAZ;AACD;AACF,GAZD;;AAmBE,MAAIK,UAAU,GAAGlC,KAAK,CAACmC,IAAN,CAAWC,QAAX,EAAjB;AACA,MAAIC,UAAU,GAAC,EAAf;AACA,MAAIC,QAAQ,GAAC,EAAb;AACA,MAAIC,SAAJ;AACA,QAAMC,SAAS,GAACC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAhB;AACA,QAAMC,SAAS,GAACF,QAAQ,CAACG,sBAAT,CAAgC,WAAhC,EAA6C,CAA7C,CAAhB;;AAKA,QAAMC,gBAAgB,GAAEC,CAAD,IAAM;AACzB,UAAMC,WAAW,GAAGD,CAAC,CAACE,MAAtB;AACA3B,IAAAA,OAAO,CAACC,GAAR,CAAYyB,WAAZ;AACCV,IAAAA,UAAU,GAAEU,WAAW,CAACE,gBAAZ,CAA6B,aAA7B,EAA4C,CAA5C,EAA+CC,SAA3D;AACAZ,IAAAA,QAAQ,GAAES,WAAW,CAACE,gBAAZ,CAA6B,iBAA7B,EAAgD,CAAhD,EAAmDC,SAA7D;AACA7B,IAAAA,OAAO,CAACC,GAAR,CAAYgB,QAAZ;AACDxB,IAAAA,eAAe,CAACuB,UAAD,CAAf;AACAxB,IAAAA,cAAc,CAACyB,QAAD,CAAd;AACD,GARH;;AAaA,sBACI;AAAA,4BACA;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,WAAxB;AAAoC,QAAA,EAAE,EAAC,WAAvC;AAAmD,QAAA,WAAW,EAAC,mBAA/D;AAAmF,QAAA,KAAK,EAAErB,UAA1F;AACA,QAAA,QAAQ,EAAE6B,CAAC,IAAIvB,YAAY,CAACuB,CAAC,CAACE,MAAF,CAASxB,KAAV;AAD3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFA,eAOA;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA,8BAEA;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAWI;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA,kBAEIL,IAAI,CAACgC,GAAL,CAASpB,IAAI,IAAE;AACb,8BAAS;AAAI,YAAA,SAAS,EAAC,mBAAd;AAAkC,YAAA,OAAO,EAAEc,gBAA3C;AAAA,oCACP;AAAM,cAAA,SAAS,EAAC,cAAhB;AAAA,2CAAgC;AAAK,gBAAA,GAAG,EAAEd,IAAI,CAACqB,YAAf;AAA6B,gBAAA,SAAS,EAAC,eAAvC;AAAuD,gBAAA,GAAG,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,oBADO,eAEP;AAAG,cAAA,SAAS,EAAC,YAAb;AAAA,yBAA4BrB,IAAI,CAACC,KAAL,CAAWqB,MAAX,CAAkB,CAAlB,EAAqBC,WAArB,KAAqCvB,IAAI,CAACC,KAAL,CAAWuB,KAAX,CAAiB,CAAjB,CAAjE,oBAAsF;AAAM,gBAAA,KAAK,EAAC,aAAZ;AAAA,0BAA2BxB,IAAI,CAACC,KAAL,CAAWqB,MAAX,CAAkB,CAAlB,EAAqBC,WAArB,KAAqCvB,IAAI,CAACC,KAAL,CAAWuB,KAAX,CAAiB,CAAjB;AAAhE;AAAA;AAAA;AAAA;AAAA,sBAAtF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFO,eAGR;AAAG,cAAA,SAAS,EAAC,gBAAb;AAAA,wBAA+BlD,mBAAmB;AAAlD;AAAA;AAAA;AAAA;AAAA,oBAHQ,eAIR;AAAG,cAAA,SAAS,EAAC,QAAb;AAAA,wBAAuBL,KAAK,CAACmC,IAAN,CAAWC,QAAX;AAAvB;AAAA;AAAA;AAAA;AAAA,oBAJQ,eAKR;AAAG,cAAA,SAAS,EAAC,WAAb;AAAA,wBAA2BrB,MAAM,IAAIA,MAAM,CAACoC,GAAP,CAAWK,KAAK,IAChDA,KAAK,CAACC,EAAN,KAAW1B,IAAI,CAAC2B,OAAjB,IAA6BF,KAAK,CAACxB,KADF;AAArC;AAAA;AAAA;AAAA;AAAA,oBALQ,eAQT,QAAC,OAAD;AAAS,cAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,oBARS;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAT;AAWD,SAZD;AAFJ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPA;AAAA,kBADJ;AA2CH;;GA7GQtB,Q;;KAAAA,Q;AAgHT,eAAeA,QAAf","sourcesContent":["import React, {useContext,useEffect,useState} from 'react'\nimport {AlbumContext,SongsContext} from '../App'\nimport AddIcon from '@material-ui/icons/Add';\nimport './AllSongs.css'\nimport CurrentPlaying from './CurrentPlaying';\nimport {CurrentSongDetails} from '../App'\nlet faker = require('faker');\n\n\nexport const CurrentSongTitle=React.createContext()\nexport const CurrentSongTime=React.createContext()\n\nconst randomTimeGenerator=()=>{\n    const randomNumber=Math.random()*10;\n    return randomNumber.toFixed(2)\n}\n\n\nfunction AllSongs() {\n\n\n    const [CurrentTitle, CurrentTime, setCurrentTime,setCurrentTitle] = useContext(CurrentSongDetails);\n\n    const albums=useContext(AlbumContext);\n    const songs=useContext(SongsContext);\n\n\n\n const [searchSong, setSearchSong] = useState(\"\");\n  const [data, setData] = useState(songs);\n\n  \n\n  console.log(data);\n\n  const handleChange = value => {\n    setSearchSong(value);\n    filterData(value);\n  };\n \n  \n  \n  const filterData = (value) => {\n    const lowercasedValue = value.toLowerCase().trim();\n    if (lowercasedValue === \"\") setData(songs);\n    else {\n      const filteredData = songs.filter(song => {\n        return  song.title.toLowerCase().includes(lowercasedValue)\n        \n      });\n      setData(filteredData);\n      console.log(data);\n      console.log(filteredData);\n    }\n  }\n\n\n\n\n\n   \n    var randomName = faker.name.findName(); \n    var TitleTrack='';\n    var Duration='';\n    let htmlSongs;\n    const searchbar=document.getElementById('searchbar');\n    const songsList=document.getElementsByClassName('SongsList')[0];\n\n\n\n\n    const eventSongHandler=(e) =>{\n        const domelements = e.target\n        console.log(domelements);\n         TitleTrack= domelements.querySelectorAll(\".TrackTitle\")[0].innerHTML;\n         Duration= domelements.querySelectorAll(\".DurationofSong\")[0].innerHTML;   \n         console.log(Duration) \n        setCurrentTitle(TitleTrack);\n        setCurrentTime(Duration);\n      }\n\n\n\n  \n    return (\n        <>\n        <p className='ActiveTitle'>All Songs</p>\n        <div className='SearchWrapper'>\n            <input type='text' name='searchbar' id='searchbar' placeholder='Search for a song' value={searchSong}\n            onChange={e => handleChange(e.target.value)} />\n        </div>\n\n        <ul className='SongsWrapper'>\n\n        <li className='TitleHeading'>\n            <th className='Songimg'>Image</th>\n            <th className='TrackTitleHeading'>Title</th>\n            <th className='DurationHeading'>Time</th>\n            <th className='SingerHeading'>Artist</th>\n            <th className='AlbumHeading'>Album</th>\n            <th className='AddtoPlaylist'>Playlist</th>\n        </li>\n        \n            <ul className='SongsList'>\n               {\n                data.map(song=>{\n                  return   <li className='EachSongContainer' onClick={eventSongHandler}>\n                    <span className='ImgContainer'> <img src={song.thumbnailUrl} className='Img-thumbnail' alt='thumbnail'/> </span>\n                    <p className='TrackTitle' >{song.title.charAt(0).toUpperCase() + song.title.slice(1)} <span class=\"tooltiptext\">{song.title.charAt(0).toUpperCase() + song.title.slice(1)}</span></p>\n                   <p className='DurationofSong'>{randomTimeGenerator()}</p>  \n                   <p className='Singer'>{faker.name.findName()}</p>   \n                   <p className='AlbumName'>{ albums && albums.map(album =>(\n                       (album.id===song.albumId) && album.title \n                  )) }</p>   \n                  <AddIcon className='AddtoFav'/> \n                </li>\n                   \n                })\n               }\n              \n\n            </ul>\n\n\n        </ul>\n        </>\n    )\n}\n\n\nexport default AllSongs\n"]},"metadata":{},"sourceType":"module"}