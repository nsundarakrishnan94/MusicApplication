{"ast":null,"code":"var _jsxFileName = \"/Users/sundarakrishnan/Desktop/MusicApplication/music-application/src/components/AlbumSongsList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport './AlbumSongsList.css';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { CurrentAlbumSelected } from '../App';\nimport { AlbumContext, SongsContext } from '../App';\nimport AddIcon from '@material-ui/icons/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet faker = require('faker');\n\nfunction AlbumSongsList() {\n  _s();\n\n  const albums = useContext(AlbumContext);\n  const songs = useContext(SongsContext);\n  const [CurrentAlbumId, setCurrentAlbumId] = useContext(CurrentAlbumSelected);\n  const [filteredData, setfilteredData] = useState(songs);\n  let filteredSongs;\n  let albumTitle = '';\n  const songfilteredData = songs.filter(song => {\n    return song.albumId == Number(CurrentAlbumId);\n  });\n  useEffect(() => {\n    setfilteredData(songfilteredData);\n  }, []);\n\n  const randomTimeGenerator = () => {\n    const randomNumber = Math.random() * 10;\n    return randomNumber.toFixed(2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AlbumSongsListContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TopHeader\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/album\",\n        children: [/*#__PURE__*/_jsxDEV(ArrowBackIosIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../images/unkownAlbum.png\",\n        className: \"SpecificAlbumImgLarge\",\n        alt: \"unknownAlbum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), albums.map(album => {\n        if (album.id == CurrentAlbumId) {\n          albumTitle = album.title;\n        }\n      }), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"FullAlbumName\",\n        children: albumTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"TotalSongs\",\n        children: [\"Total number of songs: \", filteredData.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btnWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"btn-album\",\n          children: [/*#__PURE__*/_jsxDEV(PlayArrowIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 51\n          }, this), \"Play\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"btn-album\",\n          children: [/*#__PURE__*/_jsxDEV(ShuffleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 51\n          }, this), \"Shuffle\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"SongsWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"TitleHeading\",\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"Songimg\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"TrackTitleHeading\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"DurationHeading\",\n          children: \"Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"SingerHeading\",\n          children: \"Artist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"AlbumHeading\",\n          children: \"Album\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"AddtoPlaylist\",\n          children: \"Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), filteredData.map(song => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"EachSongContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ImgContainer\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: song.thumbnailUrl,\n              className: \"Img-thumbnail\",\n              alt: \"thumbnail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 54\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"TrackTitle\",\n            children: [song.title.charAt(0).toUpperCase() + song.title.slice(1), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"tooltiptext\",\n              children: song.title.charAt(0).toUpperCase() + song.title.slice(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 108\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"DurationofSong\",\n            children: randomTimeGenerator()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"Singer\",\n            children: faker.name.findName()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"AlbumName\",\n            children: albums && albums.map(album => album.id === song.albumId && album.title)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(AddIcon, {\n            className: \"AddtoFav\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AlbumSongsList, \"Zh3NvXUAk9JtfvQ7KAhDTz+V664=\");\n\n_c = AlbumSongsList;\nexport default AlbumSongsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbumSongsList\");","map":{"version":3,"sources":["/Users/sundarakrishnan/Desktop/MusicApplication/music-application/src/components/AlbumSongsList.js"],"names":["React","useContext","useState","useEffect","PlayArrowIcon","ShuffleIcon","ArrowBackIosIcon","BrowserRouter","Router","Switch","Route","Link","CurrentAlbumSelected","AlbumContext","SongsContext","AddIcon","faker","require","AlbumSongsList","albums","songs","CurrentAlbumId","setCurrentAlbumId","filteredData","setfilteredData","filteredSongs","albumTitle","songfilteredData","filter","song","albumId","Number","randomTimeGenerator","randomNumber","Math","random","toFixed","map","album","id","title","length","thumbnailUrl","charAt","toUpperCase","slice","name","findName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA0BC,QAA1B,EAAmCC,SAAnC,QAAmD,OAAnD;AACA,OAAO,sBAAP;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,MAAjC,EAAyCC,KAAzC,EAAgDC,IAAhD,QAA2D,kBAA3D;AACA,SAAQC,oBAAR,QAAmC,QAAnC;AACA,SAAQC,YAAR,EAAqBC,YAArB,QAAwC,QAAxC;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AACA,IAAIC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AAEtB,QAAMC,MAAM,GAAClB,UAAU,CAACY,YAAD,CAAvB;AACA,QAAMO,KAAK,GAACnB,UAAU,CAACa,YAAD,CAAtB;AAGA,QAAM,CAACO,cAAD,EAAgBC,iBAAhB,IAAqCrB,UAAU,CAACW,oBAAD,CAArD;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAACkB,KAAD,CAAhD;AAGA,MAAIK,aAAJ;AACA,MAAIC,UAAU,GAAC,EAAf;AAGA,QAAMC,gBAAgB,GAACP,KAAK,CAACQ,MAAN,CAAaC,IAAI,IAAE;AACxC,WAAOA,IAAI,CAACC,OAAL,IAAeC,MAAM,CAACV,cAAD,CAA5B;AACH,GAFwB,CAAvB;AAKFlB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,eAAe,CAACG,gBAAD,CAAf;AACC,GAFM,EAEJ,EAFI,CAAT;;AAKE,QAAMK,mBAAmB,GAAC,MAAI;AAC5B,UAAMC,YAAY,GAACC,IAAI,CAACC,MAAL,KAAc,EAAjC;AACA,WAAOF,YAAY,CAACG,OAAb,CAAqB,CAArB,CAAP;AACH,GAHC;;AAOA,sBAEI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACQ,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAA,gCACA,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,eAKQ;AAAK,QAAA,GAAG,EAAC,2BAAT;AAAqC,QAAA,SAAS,EAAC,uBAA/C;AAAuE,QAAA,GAAG,EAAC;AAA3E;AAAA;AAAA;AAAA;AAAA,cALR,EAMSjB,MAAM,CAACkB,GAAP,CAAWC,KAAK,IAAE;AACf,YAAGA,KAAK,CAACC,EAAN,IAAUlB,cAAb,EAA4B;AACxBK,UAAAA,UAAU,GAACY,KAAK,CAACE,KAAjB;AACH;AACJ,OAJA,CANT,eAYQ;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,kBAA+Bd;AAA/B;AAAA;AAAA;AAAA;AAAA,cAZR,eAaQ;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,8CAAmDH,YAAY,CAACkB,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA,cAbR,eAeQ;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACA;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,SAAS,EAAC,WAAtB;AAAA,kCAAkC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,SAAS,EAAC,WAAtB;AAAA,kCAAkC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfR;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAqBQ;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA,8BACA;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,gCACA;AAAI,UAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAI,UAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA,eAIA;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA,eAKA;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALA,eAMA;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAUElB,YAAY,CAACc,GAAb,CAAiBR,IAAI,IAAE;AACtB,4BAAS;AAAI,UAAA,SAAS,EAAC,mBAAd;AAAA,kCACP;AAAM,YAAA,SAAS,EAAC,cAAhB;AAAA,yCAAgC;AAAK,cAAA,GAAG,EAAEA,IAAI,CAACa,YAAf;AAA6B,cAAA,SAAS,EAAC,eAAvC;AAAuD,cAAA,GAAG,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,oBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADO,eAEP;AAAG,YAAA,SAAS,EAAC,YAAb;AAAA,uBAA4Bb,IAAI,CAACW,KAAL,CAAWG,MAAX,CAAkB,CAAlB,EAAqBC,WAArB,KAAqCf,IAAI,CAACW,KAAL,CAAWK,KAAX,CAAiB,CAAjB,CAAjE,oBAAsF;AAAM,cAAA,KAAK,EAAC,aAAZ;AAAA,wBAA2BhB,IAAI,CAACW,KAAL,CAAWG,MAAX,CAAkB,CAAlB,EAAqBC,WAArB,KAAqCf,IAAI,CAACW,KAAL,CAAWK,KAAX,CAAiB,CAAjB;AAAhE;AAAA;AAAA;AAAA;AAAA,oBAAtF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFO,eAGR;AAAG,YAAA,SAAS,EAAC,gBAAb;AAAA,sBAA+Bb,mBAAmB;AAAlD;AAAA;AAAA;AAAA;AAAA,kBAHQ,eAIR;AAAG,YAAA,SAAS,EAAC,QAAb;AAAA,sBAAuBhB,KAAK,CAAC8B,IAAN,CAAWC,QAAX;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAJQ,eAKR;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA,sBAA2B5B,MAAM,IAAIA,MAAM,CAACkB,GAAP,CAAWC,KAAK,IAChDA,KAAK,CAACC,EAAN,KAAWV,IAAI,CAACC,OAAjB,IAA6BQ,KAAK,CAACE,KADF;AAArC;AAAA;AAAA;AAAA;AAAA,kBALQ,eAQT,QAAC,OAAD;AAAS,YAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,kBARS;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAT;AAWD,OAZA,CAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YArBR;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAsDH;;GArFQtB,c;;KAAAA,c;AAuFT,eAAeA,cAAf","sourcesContent":["import React, {useContext,useState,useEffect} from 'react'\nimport './AlbumSongsList.css'\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\nimport {CurrentAlbumSelected} from '../App'\nimport {AlbumContext,SongsContext} from '../App'\nimport AddIcon from '@material-ui/icons/Add';\nlet faker = require('faker');\n\nfunction AlbumSongsList() {\n    \n    const albums=useContext(AlbumContext);\n    const songs=useContext(SongsContext);\n\n\n    const [CurrentAlbumId,setCurrentAlbumId] = useContext(CurrentAlbumSelected);\n    const [filteredData, setfilteredData] = useState(songs);\n\n\n    let filteredSongs;\n    let albumTitle='';\n\n\n    const songfilteredData=songs.filter(song=>{\n      return song.albumId== Number(CurrentAlbumId);\n  });\n\n\n  useEffect(() => {\n    setfilteredData(songfilteredData);\n    }, []);\n\n\n    const randomTimeGenerator=()=>{\n      const randomNumber=Math.random()*10;\n      return randomNumber.toFixed(2)\n  }\n  \n\n\n    return (\n        \n        <div className='AlbumSongsListContainer'>\n        <div className='TopHeader'>\n                <Link to='/album' > \n                <ArrowBackIosIcon/>\n                <br></br>\n                </Link>\n                <img src='../images/unkownAlbum.png' className='SpecificAlbumImgLarge' alt='unknownAlbum'/> \n                {albums.map(album=>{\n                    if(album.id==CurrentAlbumId){\n                        albumTitle=album.title\n                    }\n                })}\n\n                <h1 className='FullAlbumName'>{albumTitle}</h1>\n                <h4 className='TotalSongs'>Total number of songs: {filteredData.length}</h4>\n\n                <div className='btnWrapper'>\n                <a href='#' className='btn-album'><PlayArrowIcon/>Play</a>\n                <a href='#' className='btn-album'><ShuffleIcon/>Shuffle</a>\n                </div>\n            </div>\n                <ul className='SongsWrapper'>\n                <li className='TitleHeading'>\n                <th className='Songimg'>Image</th>\n                <th className='TrackTitleHeading'>Title</th>\n                <th className='DurationHeading'>Time</th>\n                <th className='SingerHeading'>Artist</th>\n                <th className='AlbumHeading'>Album</th>\n                <th className='AddtoPlaylist'>Playlist</th>\n            </li>\n                {\n                  filteredData.map(song=>{\n                   return   <li className='EachSongContainer'>\n                     <span className='ImgContainer'> <img src={song.thumbnailUrl} className='Img-thumbnail' alt='thumbnail'/> </span>\n                     <p className='TrackTitle' >{song.title.charAt(0).toUpperCase() + song.title.slice(1)} <span class=\"tooltiptext\">{song.title.charAt(0).toUpperCase() + song.title.slice(1)}</span></p>\n                    <p className='DurationofSong'>{randomTimeGenerator()}</p>  \n                    <p className='Singer'>{faker.name.findName()}</p>   \n                    <p className='AlbumName'>{ albums && albums.map(album =>(\n                        (album.id===song.albumId) && album.title \n                   )) }</p>   \n                   <AddIcon className='AddtoFav'/> \n                 </li>\n                    \n                 })\n                }\n               \n \n             </ul>\n        \n    \n        </div>\n    )\n}\n\nexport default AlbumSongsList\n"]},"metadata":{},"sourceType":"module"}