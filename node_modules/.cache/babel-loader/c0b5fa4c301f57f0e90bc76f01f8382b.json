{"ast":null,"code":"var _jsxFileName = \"/Users/sundarakrishnan/Desktop/MusicApplication/music-application/src/components/AlbumSongsList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport './AlbumSongsList.css';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { CurrentAlbumSelected } from '../App';\nimport { AlbumContext, SongsContext } from '../App';\nimport AddIcon from '@material-ui/icons/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AlbumSongsList() {\n  _s();\n\n  const albums = useContext(AlbumContext);\n  const songs = useContext(SongsContext);\n  const [CurrentAlbumId, setCurrentAlbumId] = useContext(CurrentAlbumSelected);\n  const [filteredData, setfilteredData] = useState(songs);\n  let filteredSongs;\n  let albumTitle = '';\n  const songfilteredData = songs.filter(song => {\n    return song.albumId == Number(CurrentAlbumId);\n  });\n  useEffect(() => {\n    setfilteredData(songfilteredData);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AlbumSongsListContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/album\",\n      children: [/*#__PURE__*/_jsxDEV(ArrowBackIosIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"../images/unkownAlbum.png\",\n      className: \"SpecificAlbumImgLarge\",\n      alt: \"unknownAlbum\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), albums.map(album => {\n      if (album.id == CurrentAlbumId) {\n        albumTitle = album.title;\n      }\n    }), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"SongsList\",\n      children: filteredData.map(song => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"EachSongContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ImgContainer\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: song.thumbnailUrl,\n              className: \"Img-thumbnail\",\n              alt: \"thumbnail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 54\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"TrackTitle\",\n            children: [song.title.charAt(0).toUpperCase() + song.title.slice(1), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"tooltiptext\",\n              children: song.title.charAt(0).toUpperCase() + song.title.slice(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 108\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"DurationofSong\",\n            children: randomTimeGenerator()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"Singer\",\n            children: faker.name.findName()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"AlbumName\",\n            children: albums && albums.map(album => album.id === song.albumId && album.title)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(AddIcon, {\n            className: \"AddtoFav\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"FullAlbumName\",\n      children: albumTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"TotalSongs\",\n      children: \"Total number of songs $\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      className: \"btn-album\",\n      children: [/*#__PURE__*/_jsxDEV(PlayArrowIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 51\n      }, this), \"Play\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      className: \"btn-album\",\n      children: [/*#__PURE__*/_jsxDEV(ShuffleIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 51\n      }, this), \"Shuffle\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AlbumSongsList, \"Zh3NvXUAk9JtfvQ7KAhDTz+V664=\");\n\n_c = AlbumSongsList;\nexport default AlbumSongsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbumSongsList\");","map":{"version":3,"sources":["/Users/sundarakrishnan/Desktop/MusicApplication/music-application/src/components/AlbumSongsList.js"],"names":["React","useContext","useState","useEffect","PlayArrowIcon","ShuffleIcon","ArrowBackIosIcon","BrowserRouter","Router","Switch","Route","Link","CurrentAlbumSelected","AlbumContext","SongsContext","AddIcon","AlbumSongsList","albums","songs","CurrentAlbumId","setCurrentAlbumId","filteredData","setfilteredData","filteredSongs","albumTitle","songfilteredData","filter","song","albumId","Number","map","album","id","title","thumbnailUrl","charAt","toUpperCase","slice","randomTimeGenerator","faker","name","findName"],"mappings":"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","sourcesContent":["import React, {useContext,useState,useEffect} from 'react'\nimport './AlbumSongsList.css'\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\nimport {CurrentAlbumSelected} from '../App'\nimport {AlbumContext,SongsContext} from '../App'\nimport AddIcon from '@material-ui/icons/Add';\n\nfunction AlbumSongsList() {\n    \n    const albums=useContext(AlbumContext);\n    const songs=useContext(SongsContext);\n\n\n    const [CurrentAlbumId,setCurrentAlbumId] = useContext(CurrentAlbumSelected);\n    const [filteredData, setfilteredData] = useState(songs);\n\n\n    let filteredSongs;\n    let albumTitle='';\n\n\n    const songfilteredData=songs.filter(song=>{\n      return song.albumId== Number(CurrentAlbumId);\n  });\n\n\n  useEffect(() => {\n    setfilteredData(songfilteredData);\n    }, []);\n\n\n\n\n\n    return (\n        \n        <div className='AlbumSongsListContainer'>\n                <Link to='/album' > \n                <ArrowBackIosIcon/>\n                <br></br>\n                </Link>\n                <img src='../images/unkownAlbum.png' className='SpecificAlbumImgLarge' alt='unknownAlbum'/> \n                {albums.map(album=>{\n                    if(album.id==CurrentAlbumId){\n                        albumTitle=album.title\n                    }\n                })}\n\n                <ul className='SongsList'>\n                {\n                  filteredData.map(song=>{\n                   return   <li className='EachSongContainer'>\n                     <span className='ImgContainer'> <img src={song.thumbnailUrl} className='Img-thumbnail' alt='thumbnail'/> </span>\n                     <p className='TrackTitle' >{song.title.charAt(0).toUpperCase() + song.title.slice(1)} <span class=\"tooltiptext\">{song.title.charAt(0).toUpperCase() + song.title.slice(1)}</span></p>\n                    <p className='DurationofSong'>{randomTimeGenerator()}</p>  \n                    <p className='Singer'>{faker.name.findName()}</p>   \n                    <p className='AlbumName'>{ albums && albums.map(album =>(\n                        (album.id===song.albumId) && album.title \n                   )) }</p>   \n                   <AddIcon className='AddtoFav'/> \n                 </li>\n                    \n                 })\n                }\n               \n \n             </ul>\n                <h1 className='FullAlbumName'>{albumTitle}</h1>\n                <h4 className='TotalSongs'>Total number of songs ${}</h4>\n                <a href='#' className='btn-album'><PlayArrowIcon/>Play</a>\n                <a href='#' className='btn-album'><ShuffleIcon/>Shuffle</a>\n                \n        \n        \n    \n        </div>\n    )\n}\n\nexport default AlbumSongsList\n"]},"metadata":{},"sourceType":"module"}